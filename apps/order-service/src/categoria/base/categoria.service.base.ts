/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Categoria } from "@prisma/client";

export class CategoriaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.CategoriaCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.CategoriaCountArgs>
  ): Promise<number> {
    return this.prisma.categoria.count(args);
  }

  async categorias<T extends Prisma.CategoriaFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CategoriaFindManyArgs>
  ): Promise<Categoria[]> {
    return this.prisma.categoria.findMany(args);
  }
  async categoria<T extends Prisma.CategoriaFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CategoriaFindUniqueArgs>
  ): Promise<Categoria | null> {
    return this.prisma.categoria.findUnique(args);
  }
  async createCategoria<T extends Prisma.CategoriaCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CategoriaCreateArgs>
  ): Promise<Categoria> {
    return this.prisma.categoria.create<T>(args);
  }
  async updateCategoria<T extends Prisma.CategoriaUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CategoriaUpdateArgs>
  ): Promise<Categoria> {
    return this.prisma.categoria.update<T>(args);
  }
  async deleteCategoria<T extends Prisma.CategoriaDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CategoriaDeleteArgs>
  ): Promise<Categoria> {
    return this.prisma.categoria.delete(args);
  }
}
